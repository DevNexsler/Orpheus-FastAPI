# Use a RunPod base image with PyTorch and CUDA
FROM runpod/pytorch:2.1.0-py3.10-cuda11.8.0-devel

# Set non-interactive frontend
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies required by Orpheus-FastAPI
# Update package lists first
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libsndfile1 \
    ffmpeg \
    portaudio19-dev \
 && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Set up the working directory
WORKDIR /app

# Copy only the requirements file first to leverage Docker cache
COPY requirements.txt ./

# Install Python dependencies
# Using RUNPOD_PYTORCH=1 prevents reinstalling torch included in the base image
# Ensure pip is up-to-date and install requirements
RUN export RUNPOD_PYTORCH=1 && \
    python -m pip install --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code
COPY . .

# Set environment variables (optional, can also be set in runpod.toml)
ENV PYTHONUNBUFFERED=1 \
    PYTHONPATH=/app

# Set environment variables
ENV ORPHEUS_API_BASE_URL="http://localhost:5000"
ENV ORPHEUS_API_TIMEOUT=30
ENV ORPHEUS_PORT=8000
ENV ORPHEUS_MAX_TOKENS=350
ENV ORPHEUS_TEMPERATURE=0.1
ENV ORPHEUS_TOP_P=0.85
ENV ORPHEUS_SAMPLE_RATE=22050
# Supabase variables will be passed from the Runpod environment
ENV SUPABASE_URL=""
ENV SUPABASE_KEY=""
ENV SUPABASE_BUCKET="tts-audio"

# Port exposure and command are handled by runpod.toml OR the handler script itself
# EXPOSE 5005
# CMD is defined in runpod.toml runtime.command

# When using runpod.serverless.start, the script itself becomes the entrypoint.
CMD ["python", "-u", "src/handler.py"] 